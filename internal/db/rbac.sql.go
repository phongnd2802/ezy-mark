// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: rbac.sql

package db

import (
	"context"
)

const getRoleByUserId = `-- name: GetRoleByUserId :many
SELECT r.role_name
FROM "user_roles" ur
JOIN "roles" r ON ur.role_id = r.role_id
WHERE ur.user_id = $1
`

func (q *Queries) GetRoleByUserId(ctx context.Context, userID int64) ([]string, error) {
	rows, err := q.db.Query(ctx, getRoleByUserId, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []string{}
	for rows.Next() {
		var role_name string
		if err := rows.Scan(&role_name); err != nil {
			return nil, err
		}
		items = append(items, role_name)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
